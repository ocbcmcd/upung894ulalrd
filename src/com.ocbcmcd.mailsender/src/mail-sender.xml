<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:si="http://www.springframework.org/schema/integration"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ftp="http://www.springframework.org/schema/integration/ftp"
	xmlns:jms="http://www.springframework.org/schema/integration/jms"
	xmlns:mail="http://www.springframework.org/schema/integration/mail"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd  
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/integration 
	http://www.springframework.org/schema/integration/spring-integration-2.0.xsd  
	http://www.springframework.org/schema/integration/ftp 
	http://www.springframework.org/schema/integration/ftp/spring-integration-ftp-2.0.xsd      
	http://www.springframework.org/schema/integration/jms 
	http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.0.xsd 
	http://www.springframework.org/schema/integration/mail 
	http://www.springframework.org/schema/integration/mail/spring-integration-mail-2.0.xsd">

	<context:annotation-config />
	<!-- <context:property-placeholder location="application.properties" />  -->
	<context:component-scan base-package="com.ocbcmcd" />

	<bean class="com.ocbcmcd.config.spring.EncryptedPropertyPlaceholderConfigurer">
		<property name="locations" value="application.properties"/>
	</bean>

	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<property name="targetConnectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="${jms.brokerURL}" />
			</bean>
		</property>
		<property name="sessionCacheSize" value="10" />
		<property name="cacheProducers" value="false" />
	</bean>

	<!-- Event Handling for Processing CHK Confirmation from servr -->
	<si:channel id="errorProcessChannel" />

	<bean id="errorProcessDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="${jms.failedprocess.topic}" />
	</bean>

	<jms:message-driven-channel-adapter
		channel="errorProcessChannel" extract-payload="false"
		connection-factory="connectionFactory" destination="errorProcessDestination" />

	<si:service-activator input-channel="errorProcessChannel"
		ref="errorProcessMessageHandler" />

	<!-- Event Handling for processing failed ftp sending -->
	<si:channel id="errorSendingChannel" />

	<bean id="errorSendingDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="${jms.sentfailed.topic}" />
	</bean>

	<jms:message-driven-channel-adapter
		channel="errorSendingChannel" extract-payload="false"
		connection-factory="connectionFactory" destination="errorSendingDestination" />

	<si:service-activator input-channel="errorSendingChannel"
		ref="errorFailedMessageHandler" />

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="port" value="${mail.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">${mail.transport.protocol}</prop>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
				<prop key="mail.debug">false</prop>
			</props>
		</property>
	</bean>

	<bean id="ftpErrorMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from">
			<value>${mail.from}</value>
		</property>
		<property name="to">
			<value>${mail.to.sent.failed}</value>
		</property>
		<property name="subject"
			value="${mail.sent.failed.subject}" />
	</bean>

	<bean id="processFailedMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from">
			<value>${mail.from}</value>
		</property>
		<property name="to">
			<value>${mail.to.processed.failed}</value>
		</property>
		<property name="subject"
			value="${mail.processed.failed.subject}" />
	</bean>

	<bean id="ftpErrorEmailService" class="com.ocbcmcd.mailsender.mail.MailService">
		<constructor-arg name="mailSender" ref="mailSender"/>
		<constructor-arg name="velocityEngine" ref="velocityEngine"/>
		<constructor-arg name="alertMailMessage" ref="ftpErrorMessage"/>
	</bean>

	<bean id="processFailedEmailService" class="com.ocbcmcd.mailsender.mail.MailService">
		<constructor-arg name="mailSender" ref="mailSender"/>
		<constructor-arg name="velocityEngine" ref="velocityEngine"/>
		<constructor-arg name="alertMailMessage" ref="processFailedMessage"/>
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>

	<si:channel id="ftpChannel" />

	<bean id="ftpSessionFactory"
		class="org.springframework.integration.ftp.session.DefaultFtpSessionFactory">
		<property name="host" value="${ftp.host}" />
		<property name="username" value="${ftp.username}" />
		<property name="password" value="${ftp.password}" />
		<property name="port" value="${ftp.port}" />
	</bean>

	<ftp:inbound-channel-adapter id="ftpInbound"
		channel="ftpChannel" session-factory="ftpSessionFactory" charset="UTF-8"
		auto-create-local-directory="true" delete-remote-files="true"
		filename-pattern="*.txt" remote-directory="${ftp.report.dir}" local-directory="${ftp.temp.dir}">
		<!-- <si:poller fixed-rate="1000" /> -->
		<si:poller cron="${endofday.cron}" />  
	</ftp:inbound-channel-adapter>

	<si:channel id="outboundMail" />

	<mail:outbound-channel-adapter channel="outboundMail"
		mail-sender="mailSender" />

	<si:transformer input-channel="ftpChannel"
		output-channel="outboundMail" ref="fileToMailMessageTransformer" />

</beans>
